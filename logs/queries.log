2020-12-14 16:27:14 Debug: duration=21 rows=8 SHOW FULL COLUMNS FROM `posts`
2020-12-14 16:27:14 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-14 16:27:14 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-14 16:27:14 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-14 16:27:14 Debug: duration=9 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-14 16:27:14 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-14 16:27:14 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-14 16:27:14 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-14 16:27:14 Debug: duration=11 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-14 16:27:14 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-14 16:27:14 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-14 16:27:14 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-14 16:27:14 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:27:14 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:31:09 Debug: duration=15 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-14 16:31:09 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-14 16:31:09 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-14 16:31:09 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-14 16:31:09 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'esteveloris@gmail.com' LIMIT 1
2020-12-14 16:31:10 Debug: duration=14 rows=8 SHOW FULL COLUMNS FROM `posts`
2020-12-14 16:31:10 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-14 16:31:10 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-14 16:31:10 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-14 16:31:10 Debug: duration=11 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-14 16:31:10 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-14 16:31:10 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-14 16:31:10 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-14 16:31:10 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:31:10 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:31:13 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-14 16:31:13 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-14 16:31:33 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-14 16:31:33 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-14 16:31:37 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-14 16:31:37 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-14 16:37:31 Debug: duration=14 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-14 16:37:31 Debug: duration=2 rows=3 SHOW INDEXES FROM `users`
2020-12-14 16:37:31 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-14 16:37:31 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-14 16:37:31 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'esteveloris@gmail.com' LIMIT 1
2020-12-14 16:37:31 Debug: duration=14 rows=8 SHOW FULL COLUMNS FROM `posts`
2020-12-14 16:37:31 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-14 16:37:31 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-14 16:37:31 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-14 16:37:31 Debug: duration=12 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-14 16:37:31 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-14 16:37:31 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-14 16:37:31 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-14 16:37:31 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:37:31 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:39:53 Debug: duration=14 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-14 16:39:53 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-14 16:39:53 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-14 16:39:53 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-14 16:39:53 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'esteveloris@gmail.com' LIMIT 1
2020-12-14 16:43:33 Debug: duration=15 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-14 16:43:33 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-14 16:43:33 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-14 16:43:33 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-14 16:43:33 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users LIMIT 20 OFFSET 0
2020-12-14 16:43:33 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-12-14 16:43:38 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 3 LIMIT 1
2020-12-14 16:43:44 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 3 LIMIT 1
2020-12-14 16:43:44 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE (Users.pseudo = 'Loris12' AND NOT (Users.id = 3)) LIMIT 1
2020-12-14 16:43:44 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE (Users.email = 'esteveloris@gmail.com' AND NOT (Users.id = 3)) LIMIT 1
2020-12-14 16:43:44 Debug: duration=0 rows=0 BEGIN
2020-12-14 16:43:44 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE (Users.pseudo = 'Loris12' AND NOT (Users.id = 3)) LIMIT 1
2020-12-14 16:43:44 Debug: duration=2 rows=1 UPDATE users SET name = 'esteve' , pseudo = 'Loris12' WHERE id = 3
2020-12-14 16:43:44 Debug: duration=0 rows=0 COMMIT
2020-12-14 16:43:44 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users LIMIT 20 OFFSET 0
2020-12-14 16:43:44 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-12-14 16:43:48 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 4 LIMIT 1
2020-12-14 16:44:04 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 4 LIMIT 1
2020-12-14 16:44:04 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE (Users.pseudo = 'LorisAdmin' AND NOT (Users.id = 4)) LIMIT 1
2020-12-14 16:44:04 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE (Users.email = 'lorisesteve@gmail.com' AND NOT (Users.id = 4)) LIMIT 1
2020-12-14 16:44:04 Debug: duration=0 rows=0 BEGIN
2020-12-14 16:44:04 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE (Users.pseudo = 'LorisAdmin' AND NOT (Users.id = 4)) LIMIT 1
2020-12-14 16:44:04 Debug: duration=1 rows=1 UPDATE users SET name = 'esteve' , first_name = 'loris' , pseudo = 'LorisAdmin' WHERE id = 4
2020-12-14 16:44:04 Debug: duration=0 rows=0 COMMIT
2020-12-14 16:44:05 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users LIMIT 20 OFFSET 0
2020-12-14 16:44:05 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-12-14 16:44:32 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'lorisesteve@gmail.com' LIMIT 1
2020-12-14 16:44:32 Debug: duration=16 rows=8 SHOW FULL COLUMNS FROM `posts`
2020-12-14 16:44:32 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-14 16:44:32 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-14 16:44:32 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-14 16:44:32 Debug: duration=13 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-14 16:44:32 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-14 16:44:32 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-14 16:44:32 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-14 16:44:32 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:44:32 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:45:15 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:45:15 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:45:25 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:45:25 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:45:42 Debug: duration=14 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-14 16:45:42 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-14 16:45:42 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-14 16:45:42 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-14 16:45:42 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:45:42 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:45:47 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:45:47 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:46:19 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'esteveloris@gmail.com' LIMIT 1
2020-12-14 16:46:24 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'lorisesteve@gmail.com' LIMIT 1
2020-12-14 16:46:24 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:46:24 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:46:26 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 4 LIMIT 1
2020-12-14 16:46:31 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:46:31 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:47:16 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'lorisesteve@gmail.com' LIMIT 1
2020-12-14 16:47:16 Debug: duration=15 rows=8 SHOW FULL COLUMNS FROM `posts`
2020-12-14 16:47:16 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-14 16:47:16 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-14 16:47:16 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-14 16:47:16 Debug: duration=11 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-14 16:47:16 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-14 16:47:16 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-14 16:47:16 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-14 16:47:16 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-14 16:47:16 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-14 16:47:19 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-12-14 16:47:41 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users LIMIT 20 OFFSET 0
2020-12-14 16:47:41 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-12-14 17:00:36 Debug: duration=17 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-14 17:00:36 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-14 17:00:36 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-14 17:00:36 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-14 17:00:38 Debug: duration=16 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-14 17:00:38 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-14 17:00:38 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-14 17:00:38 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-14 17:00:38 Debug: duration=13 rows=8 SHOW FULL COLUMNS FROM `posts`
2020-12-14 17:00:38 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-14 17:00:38 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-14 17:00:38 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-14 17:00:38 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-14 17:00:38 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:34:17 Debug: duration=51 rows=8 SHOW FULL COLUMNS FROM `posts`
2020-12-15 16:34:17 Debug: duration=37 rows=3 SHOW INDEXES FROM `posts`
2020-12-15 16:34:17 Debug: duration=7 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-15 16:34:18 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-15 16:34:18 Debug: duration=23 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-15 16:34:18 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-15 16:34:18 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-15 16:34:18 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-15 16:34:18 Debug: duration=18 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-15 16:34:18 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-15 16:34:18 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-15 16:34:18 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-15 16:34:18 Debug: duration=1 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:34:18 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:34:24 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:34:24 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:34:35 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'esteveloris@gmail.com' LIMIT 1
2020-12-15 16:34:35 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:34:35 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:34:37 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 2 LIMIT 1
2020-12-15 16:34:37 Debug: duration=2 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN categories Categories ON Categories.id = (Posts.category_id) WHERE Posts.user_id in (2)
2020-12-15 16:34:43 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 2 LIMIT 1
2020-12-15 16:34:47 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 2 LIMIT 1
2020-12-15 16:34:47 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN categories Categories ON Categories.id = (Posts.category_id) WHERE Posts.user_id in (2)
2020-12-15 16:35:56 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'lorisesteve@gmail.com' LIMIT 1
2020-12-15 16:35:56 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:35:57 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:00 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users LIMIT 20 OFFSET 0
2020-12-15 16:36:00 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-12-15 16:36:02 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:36:02 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:03 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 20 OFFSET 0
2020-12-15 16:36:03 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM categories Categories
2020-12-15 16:36:06 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:36:06 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:07 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users LIMIT 20 OFFSET 0
2020-12-15 16:36:07 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-12-15 16:36:11 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:36:11 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:14 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:36:15 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:16 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:36:16 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:22 Debug: duration=16 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-15 16:36:22 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-15 16:36:22 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-15 16:36:23 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-15 16:36:26 Debug: duration=13 rows=8 SHOW FULL COLUMNS FROM `posts`
2020-12-15 16:36:26 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-15 16:36:26 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-15 16:36:26 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-15 16:36:26 Debug: duration=11 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-15 16:36:26 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-15 16:36:26 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-15 16:36:26 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-15 16:36:26 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:36:26 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:32 Debug: duration=1 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) ORDER BY Posts.image asc LIMIT 20 OFFSET 0
2020-12-15 16:36:32 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:33 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) ORDER BY Posts.image desc LIMIT 20 OFFSET 0
2020-12-15 16:36:33 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:34 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:36:34 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:36:42 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.email = 'esteveloris@gmail.com' LIMIT 1
2020-12-15 16:36:42 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.image AS `Posts__image`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 16:36:42 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 16:37:08 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:37:08 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 16:37:15 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:37:15 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 16:37:21 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:37:21 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 16:40:18 Debug: duration=14 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-15 16:40:18 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-15 16:40:18 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-15 16:40:18 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-15 16:40:18 Debug: duration=12 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-15 16:40:18 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-15 16:40:18 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-15 16:40:18 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-15 16:40:18 Debug: duration=8 rows=8 SHOW FULL COLUMNS FROM `posts`
2020-12-15 16:40:18 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-15 16:40:18 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-15 16:40:18 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-15 16:40:18 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:40:18 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 16:40:22 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:40:22 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 16:40:23 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:40:23 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 16:40:36 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:40:36 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 16:40:41 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:40:41 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 16:41:24 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:41:24 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 16:41:28 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 16:41:28 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 17:04:40 Debug: duration=16 rows=7 SHOW FULL COLUMNS FROM `posts`
2020-12-15 17:04:40 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-15 17:04:40 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-15 17:04:40 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-15 17:04:40 Debug: duration=12 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-15 17:04:40 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-15 17:04:40 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-15 17:04:40 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-15 17:04:40 Debug: duration=13 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-15 17:04:40 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-15 17:04:40 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-15 17:04:40 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-15 17:04:40 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 17:04:40 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 17:17:02 Debug: duration=0 rows=0 BEGIN
2020-12-15 17:17:02 Debug: duration=13 rows=0 SHOW FULL COLUMNS FROM `files`
2020-12-15 17:17:02 Debug: duration=0 rows=0 ROLLBACK
2020-12-15 17:18:47 Debug: duration=0 rows=0 BEGIN
2020-12-15 17:18:47 Debug: duration=14 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 17:18:47 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 17:18:47 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 17:18:47 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 17:18:47 Debug: duration=0 rows=1 INSERT INTO files (name) VALUES ('3696330.png')
2020-12-15 17:18:47 Debug: duration=0 rows=0 COMMIT
2020-12-15 17:18:47 Debug: duration=0 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:22:22 Debug: duration=14 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 17:22:22 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 17:22:22 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 17:22:22 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 17:22:22 Debug: duration=0 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:23:16 Debug: duration=0 rows=0 BEGIN
2020-12-15 17:23:16 Debug: duration=0 rows=1 INSERT INTO files (name) VALUES ('3696330.png')
2020-12-15 17:23:16 Debug: duration=0 rows=0 COMMIT
2020-12-15 17:23:17 Debug: duration=0 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:25:01 Debug: duration=0 rows=0 BEGIN
2020-12-15 17:25:01 Debug: duration=15 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 17:25:01 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 17:25:01 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 17:25:01 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 17:25:01 Debug: duration=1 rows=1 INSERT INTO files (name) VALUES ('3696330.png')
2020-12-15 17:25:01 Debug: duration=0 rows=0 COMMIT
2020-12-15 17:25:01 Debug: duration=0 rows=3 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:26:33 Debug: duration=0 rows=3 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:26:33 Debug: duration=0 rows=3 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:26:37 Debug: duration=0 rows=0 BEGIN
2020-12-15 17:26:37 Debug: duration=0 rows=1 INSERT INTO files (name) VALUES ('3696330.png')
2020-12-15 17:26:37 Debug: duration=0 rows=0 COMMIT
2020-12-15 17:26:37 Debug: duration=0 rows=4 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:26:38 Debug: duration=0 rows=4 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:27:20 Debug: duration=14 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 17:27:20 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 17:27:20 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 17:27:20 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 17:27:20 Debug: duration=0 rows=4 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:27:32 Debug: duration=0 rows=0 BEGIN
2020-12-15 17:27:32 Debug: duration=0 rows=1 INSERT INTO files (name) VALUES ('3696330.png')
2020-12-15 17:27:32 Debug: duration=0 rows=0 COMMIT
2020-12-15 17:27:32 Debug: duration=0 rows=5 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:28:16 Debug: duration=0 rows=5 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:28:30 Debug: duration=1 rows=5 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:28:55 Debug: duration=0 rows=5 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:29:01 Debug: duration=0 rows=5 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:29:15 Debug: duration=0 rows=5 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:29:29 Debug: duration=14 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 17:29:29 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 17:29:29 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 17:29:29 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 17:29:29 Debug: duration=0 rows=5 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.tmp_name AS `Files__tmp_name` FROM files Files
2020-12-15 17:36:31 Debug: duration=14 rows=7 SHOW FULL COLUMNS FROM `posts`
2020-12-15 17:36:31 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-15 17:36:31 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-15 17:36:31 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-15 17:36:31 Debug: duration=11 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-15 17:36:31 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-15 17:36:31 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-15 17:36:31 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-15 17:36:31 Debug: duration=11 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-15 17:36:31 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-15 17:36:31 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-15 17:36:31 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-15 17:36:31 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 17:36:31 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 17:36:33 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 17:36:33 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 17:48:40 Debug: duration=16 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-15 17:48:40 Debug: duration=1 rows=3 SHOW INDEXES FROM `users`
2020-12-15 17:48:40 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-15 17:48:40 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-15 17:48:40 Debug: duration=11 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-15 17:48:40 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-15 17:48:40 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-15 17:48:40 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-15 17:48:40 Debug: duration=11 rows=7 SHOW FULL COLUMNS FROM `posts`
2020-12-15 17:48:40 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-15 17:48:40 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-15 17:48:40 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-15 17:48:40 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 17:48:40 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 17:49:05 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 17:49:05 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 18:04:12 Debug: duration=10 rows=0 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:05:50 Debug: duration=8 rows=0 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:06:02 Debug: duration=6 rows=0 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:06:43 Debug: duration=7 rows=0 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:06:48 Debug: duration=7 rows=0 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:07:34 Debug: duration=14 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:07:34 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 18:07:34 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 18:07:34 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 18:07:34 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:07:39 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:11:01 Debug: duration=16 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:11:01 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 18:11:01 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 18:11:01 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 18:11:01 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:11:33 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:14:36 Debug: duration=16 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:14:36 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 18:14:36 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 18:14:36 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 18:14:36 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:15:32 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:15:32 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:15:32 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:15:57 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:19:08 Debug: duration=16 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:19:09 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 18:19:09 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 18:19:09 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 18:19:09 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:21:06 Debug: duration=16 rows=7 SHOW FULL COLUMNS FROM `posts`
2020-12-15 18:21:06 Debug: duration=1 rows=3 SHOW INDEXES FROM `posts`
2020-12-15 18:21:06 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-15 18:21:06 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-15 18:21:06 Debug: duration=14 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-15 18:21:06 Debug: duration=2 rows=3 SHOW INDEXES FROM `users`
2020-12-15 18:21:06 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-15 18:21:06 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-15 18:21:06 Debug: duration=13 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-15 18:21:06 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-12-15 18:21:06 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-15 18:21:06 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-15 18:21:06 Debug: duration=14 rows=5 SHOW FULL COLUMNS FROM `images`
2020-12-15 18:21:06 Debug: duration=1 rows=2 SHOW INDEXES FROM `images`
2020-12-15 18:21:06 Debug: duration=1 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'images' AND rc.TABLE_NAME = 'images'
2020-12-15 18:21:06 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'images'
2020-12-15 18:21:06 Debug: duration=0 rows=0 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 18:21:06 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 18:21:08 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 18:21:08 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 18:21:12 Debug: duration=0 rows=0 BEGIN
2020-12-15 18:21:12 Debug: duration=0 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 2 LIMIT 1
2020-12-15 18:21:13 Debug: duration=0 rows=1 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-12-15 18:21:13 Debug: duration=1 rows=1 INSERT INTO posts (user_id, category_id, title, content, created, modified) VALUES (2, 1, 'Incroyable', 'aaa', '2020-12-15 18:21:13', '2020-12-15 18:21:13')
2020-12-15 18:21:13 Debug: duration=0 rows=0 COMMIT
2020-12-15 18:21:13 Debug: duration=0 rows=1 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 18:21:13 Debug: duration=0 rows=0 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (4)
2020-12-15 18:21:13 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 18:21:18 Debug: duration=1 rows=1 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 18:21:18 Debug: duration=0 rows=0 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (4)
2020-12-15 18:21:18 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 18:21:27 Debug: duration=1 rows=1 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 18:21:27 Debug: duration=0 rows=0 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (4)
2020-12-15 18:21:27 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 18:21:28 Debug: duration=0 rows=1 SELECT Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM categories Categories LIMIT 200
2020-12-15 18:21:28 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.name AS `Users__name` FROM users Users LIMIT 200
2020-12-15 18:21:29 Debug: duration=0 rows=1 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 18:21:30 Debug: duration=0 rows=0 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (4)
2020-12-15 18:21:30 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 18:24:00 Debug: duration=0 rows=0 BEGIN
2020-12-15 18:24:00 Debug: duration=14 rows=3 SHOW FULL COLUMNS FROM `files`
2020-12-15 18:24:00 Debug: duration=1 rows=1 SHOW INDEXES FROM `files`
2020-12-15 18:24:00 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-12-15 18:24:00 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-12-15 18:24:00 Debug: duration=1 rows=1 INSERT INTO files (name, path) VALUES ('3696330.png', 'img/7da91104941efa2c63c6167970b7bc6e53d30961.png')
2020-12-15 18:24:00 Debug: duration=0 rows=0 COMMIT
2020-12-15 18:24:00 Debug: duration=0 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:24:25 Debug: duration=0 rows=0 BEGIN
2020-12-15 18:24:25 Debug: duration=1 rows=1 INSERT INTO files (name, path) VALUES ('iphone-6s.jpg', 'img/61662722778dd7fa0354afc07bed0d35599f4846.jpg')
2020-12-15 18:24:25 Debug: duration=0 rows=0 COMMIT
2020-12-15 18:24:25 Debug: duration=0 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:24:36 Debug: duration=0 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:25:06 Debug: duration=0 rows=0 BEGIN
2020-12-15 18:25:06 Debug: duration=1 rows=1 INSERT INTO files (name, path) VALUES ('3696330.png', 'img/7da91104941efa2c63c6167970b7bc6e53d30961.png')
2020-12-15 18:25:06 Debug: duration=0 rows=0 COMMIT
2020-12-15 18:25:06 Debug: duration=0 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path` FROM files Files
2020-12-15 18:58:16 Debug: duration=1 rows=8 SHOW FULL COLUMNS FROM `users`
2020-12-15 18:58:16 Debug: duration=0 rows=3 SHOW INDEXES FROM `users`
2020-12-15 18:58:16 Debug: duration=5 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-12-15 18:58:16 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-12-15 18:58:16 Debug: duration=0 rows=7 SHOW FULL COLUMNS FROM `posts`
2020-12-15 18:58:16 Debug: duration=0 rows=3 SHOW INDEXES FROM `posts`
2020-12-15 18:58:16 Debug: duration=1 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'posts' AND rc.TABLE_NAME = 'posts'
2020-12-15 18:58:16 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'posts'
2020-12-15 18:58:16 Debug: duration=0 rows=2 SHOW FULL COLUMNS FROM `categories`
2020-12-15 18:58:16 Debug: duration=0 rows=1 SHOW INDEXES FROM `categories`
2020-12-15 18:58:16 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-12-15 18:58:16 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-12-15 18:58:16 Debug: duration=0 rows=5 SHOW FULL COLUMNS FROM `images`
2020-12-15 18:58:16 Debug: duration=0 rows=2 SHOW INDEXES FROM `images`
2020-12-15 18:58:16 Debug: duration=1 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'blog_cakephp' AND kcu.TABLE_NAME = 'images' AND rc.TABLE_NAME = 'images'
2020-12-15 18:58:16 Debug: duration=0 rows=1 SHOW TABLE STATUS WHERE Name = 'images'
2020-12-15 18:58:16 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-12-15 18:58:16 Debug: duration=0 rows=2 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN categories Categories ON Categories.id = (Posts.category_id) WHERE Posts.user_id in (1)
2020-12-15 18:58:16 Debug: duration=0 rows=4 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (1,2)
2020-12-15 18:58:48 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-12-15 18:58:48 Debug: duration=0 rows=2 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN categories Categories ON Categories.id = (Posts.category_id) WHERE Posts.user_id in (1)
2020-12-15 18:58:48 Debug: duration=0 rows=4 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (1,2)
2020-12-15 18:58:49 Debug: duration=1 rows=3 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 18:58:49 Debug: duration=0 rows=6 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (1,2,3)
2020-12-15 18:58:49 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 18:58:49 Debug: duration=1 rows=3 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 18:58:49 Debug: duration=0 rows=6 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (1,2,3)
2020-12-15 18:58:49 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 18:58:49 Debug: duration=1 rows=3 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 18:58:49 Debug: duration=0 rows=6 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (1,2,3)
2020-12-15 18:58:49 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
2020-12-15 18:58:49 Debug: duration=1 rows=3 SELECT Posts.id AS `Posts__id`, Posts.user_id AS `Posts__user_id`, Posts.category_id AS `Posts__category_id`, Posts.title AS `Posts__title`, Posts.content AS `Posts__content`, Posts.created AS `Posts__created`, Posts.modified AS `Posts__modified`, Users.id AS `Users__id`, Users.name AS `Users__name`, Users.first_name AS `Users__first_name`, Users.pseudo AS `Users__pseudo`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.role AS `Users__role`, Users.created AS `Users__created`, Categories.id AS `Categories__id`, Categories.title AS `Categories__title` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id) LIMIT 20 OFFSET 0
2020-12-15 18:58:49 Debug: duration=0 rows=6 SELECT Images.id AS `Images__id`, Images.post_id AS `Images__post_id`, Images.name AS `Images__name`, Images.path AS `Images__path`, Images.created AS `Images__created` FROM images Images WHERE Images.post_id in (1,2,3)
2020-12-15 18:58:49 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM posts Posts INNER JOIN users Users ON Users.id = (Posts.user_id) INNER JOIN categories Categories ON Categories.id = (Posts.category_id)
